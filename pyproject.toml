[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "fast-dev-cli"
dynamic = ["version"]
description = "Python project development tool."
authors = [{name = "Waket Zheng", email = "waketzheng@gmail.com>"}]
readme = "README.md"
requires-python = ">=3.9,<4"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "typer>=0.12.3,<0.16",
    "emoji >=2.12.1,<3",
    "tomli>=2.0.1,<3; python_version < '3.11'"
]

[project.urls]
Homepage = "https://github.com/waketzheng/fast-dev-cli"

[project.optional-dependencies]
standard = [
    "coverage >=7.5.1,<8",
    "ruff >=0.4.4,<1",
    "mypy >=1.10.0,<2",
    "bumpversion2 >=1.4.3,<2",
    "pytest >=8.2.0,<9",
    "packaging>=20.5",
]
all = [
    "bandit>=1.7.9,<2",
    "pytest-mock >=3.14.0,<4",
    "fast-dev-cli[standard]"
]


[tool.pdm]
version = { source = "file", path = "fast_dev_cli/__init__.py" }
distribution = true

[tool.pdm.build]
source-includes = [
    "scripts/",
]
[tool.pdm.dev-dependencies]
dev = ["-e file:///${PROJECT_ROOT}/#egg=fast-dev-cli[all]"]
[tool.waketzheng._internal-slim-build.packages.fastdevcli-slim.project]
name = "fastdevcli-slim"

[tool.waketzheng._internal-slim-build.packages.fast-dev-cli]
include-optional-dependencies = ["standard"]

[tool.waketzheng._internal-slim-build.packages.fast-dev-cli.project.optional-dependencies]
include-optional-dependencies = ["all"]

[tool.waketzheng._internal-slim-build.packages.fastdevcli-slim.project.scripts]
fast = "fast_dev_cli:cli.main"
[tool.waketzheng._internal-slim-build.packages.fast-dev-cli.project.scripts]
fast = "fast_dev_cli:cli.main"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
parallel = true
source = [
    "fast_dev_cli"
]
omit = [
    "__pypackages__/*",
    ".venv/*",
    "venv*.bak/*"
]
context = '${CONTEXT}'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]
omit = [
    "tests/*",
    "fast_dev_cli/__main__.py",
]

[tool.mypy]
pretty = true
python_version = "3.9"
ignore_missing_imports = true
check_untyped_defs = true
exclude = [
    "^fabfile\\.py$",  # TOML's double-quoted strings require escaping backslashes
    'two\.pyi$',  # but TOML's single-quoted strings do not
    '^\.venv',
    '\.bak',
    '__pypackages__',
]

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["E501"]
"scripts/*.py" = ["UP009","UP032"]
"fast_dev_cli/cli.py" = ["UP007"]
